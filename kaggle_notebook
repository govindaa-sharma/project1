{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceType":"datasetVersion","sourceId":396802,"datasetId":175990,"databundleVersionId":411832},{"sourceType":"modelInstanceVersion","sourceId":6058,"databundleVersionId":7429185,"modelInstanceId":4679}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install keras-nlp --quiet\n!pip install tensorflow-text --quiet\n\n# Standard Python libraries\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport cv2\nfrom PIL import Image\nimport os\n\nimport keras_nlp\nimport tensorflow_text as tf_text \n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import IsolationForest\n\nfrom tqdm.notebook import tqdm\n\nprint(f\"TensorFlow Version: {tf.__version__}\")\nprint(f\"KerasNLP Version: {keras_nlp.__version__}\")\n\n# Check for GPU availability (Kaggle specific check)\ngpus = tf.config.list_physical_devices('GPU')\nif gpus:\n    print(f\"GPU Available: {gpus[0].name}. Your model will use this GPU.\")\nelse:\n    print(\"WARNING: No GPU detected. The model will run on CPU, which will be EXTREMELY SLOW for deep learning.\")\n    print(\"Please ensure GPU is selected in Notebook Settings -> Accelerator.\")\n\n# Set random seeds for reproducibility\ntf.random.set_seed(42)\nnp.random.seed(42)\n\n# Define standard image dimensions\nIMG_HEIGHT = 224\nIMG_WIDTH = 224","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:31:48.561739Z","iopub.execute_input":"2025-07-29T08:31:48.562438Z","iopub.status.idle":"2025-07-29T08:32:20.223949Z","shell.execute_reply.started":"2025-07-29T08:31:48.562411Z","shell.execute_reply":"2025-07-29T08:32:20.223104Z"}},"outputs":[{"name":"stderr","text":"2025-07-29 08:32:00.064356: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1753777920.442493      36 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1753777920.547048      36 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"name":"stdout","text":"TensorFlow Version: 2.18.0\nKerasNLP Version: 0.18.1\nGPU Available: /physical_device:GPU:0. Your model will use this GPU.\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"KAGGLE_DATASET_PATH = '/kaggle/input/fashion-product-images-small/'\n\ncsv_path = os.path.join(KAGGLE_DATASET_PATH, 'styles.csv')\ntry:\n    df = pd.read_csv(csv_path, on_bad_lines='skip', low_memory=False)\nexcept TypeError: # Fallback for older pandas versions\n    df = pd.read_csv(csv_path, error_bad_lines=False, warn_bad_lines=True, low_memory=False)\n\ndf['image_path'] = df['id'].apply(lambda x: os.path.join(KAGGLE_DATASET_PATH, 'images', f'{x}.jpg'))\n\ninitial_rows = len(df)\ndf.dropna(subset=['productDisplayName', 'masterCategory', 'image_path'], inplace=True)\ndf = df[df['productDisplayName'].apply(lambda x: isinstance(x, str) and len(x.strip()) > 0)]\ndf = df[df['masterCategory'].apply(lambda x: isinstance(x, str) and len(x.strip()) > 0)]\ndf['image_exists'] = df['image_path'].apply(lambda x: os.path.exists(x))\ndf = df[df['image_exists'] == True]\ndf.drop(columns=['image_exists'], inplace=True)\nfinal_rows = len(df)\n\nprint(f\"Total products loaded: {len(df)}\")\nprint(f\"Unique Master Categories: {df['masterCategory'].nunique()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:32:27.326441Z","iopub.execute_input":"2025-07-29T08:32:27.327428Z","iopub.status.idle":"2025-07-29T08:34:53.284752Z","shell.execute_reply.started":"2025-07-29T08:32:27.327397Z","shell.execute_reply":"2025-07-29T08:34:53.284086Z"}},"outputs":[{"name":"stdout","text":"Total products loaded: 44412\nUnique Master Categories: 7\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"category_counts = df['masterCategory'].value_counts()\nMIN_SAMPLES_PER_CATEGORY = 5\ncategories_to_keep = category_counts[category_counts >= MIN_SAMPLES_PER_CATEGORY].index.tolist()\ndf_filtered = df[df['masterCategory'].isin(categories_to_keep)].copy()\ndf = df_filtered\n\nprint(f\"New total products after filtering: {len(df)}\")\nprint(f\"New number of unique categories after filtering: {len(df['masterCategory'].unique())}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:36:50.594226Z","iopub.execute_input":"2025-07-29T08:36:50.594887Z","iopub.status.idle":"2025-07-29T08:36:50.620337Z","shell.execute_reply.started":"2025-07-29T08:36:50.594860Z","shell.execute_reply":"2025-07-29T08:36:50.619538Z"}},"outputs":[{"name":"stdout","text":"New total products after filtering: 44411\nNew number of unique categories after filtering: 6\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"def _load_and_preprocess_image_inner(image_path_bytes):\n\n    image_path = image_path_bytes.numpy().decode('utf-8')\n\n    try:\n        img = Image.open(image_path).convert('RGB')\n        img = img.resize((IMG_WIDTH, IMG_HEIGHT))\n        img_array = np.array(img).astype(np.float32) / 255.0\n        return img_array\n    except Exception as e:\n        return np.zeros((IMG_HEIGHT, IMG_WIDTH, 3), dtype=tf.float32)\n\ndef load_and_preprocess_image(image_path_tensor):\n    image_tensor = tf.py_function(\n        _load_and_preprocess_image_inner,\n        [image_path_tensor],\n        [tf.float32]\n    )[0]\n    image_tensor.set_shape([IMG_HEIGHT, IMG_WIDTH, 3])\n    return image_tensor","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:36:57.479944Z","iopub.execute_input":"2025-07-29T08:36:57.480763Z","iopub.status.idle":"2025-07-29T08:36:57.485889Z","shell.execute_reply.started":"2025-07-29T08:36:57.480735Z","shell.execute_reply":"2025-07-29T08:36:57.485159Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"MAX_TEXT_LEN = 64\n\npreprocessor = keras_nlp.models.BertPreprocessor.from_preset(\n    \"bert_base_en\",\n    sequence_length=MAX_TEXT_LEN\n)\n\ndef get_preprocessed_text_inputs(texts):\n    texts_tensor = tf.constant(texts.tolist())\n    preprocessed_output_dict = preprocessor(texts_tensor)\n\n    token_ids_np = preprocessed_output_dict['token_ids'].numpy()\n    segment_ids_np = preprocessed_output_dict['segment_ids'].numpy()\n    padding_mask_np = preprocessed_output_dict['padding_mask'].numpy()\n\n    return token_ids_np, segment_ids_np, padding_mask_np\n\n\nX_token_ids, X_segment_ids, X_padding_mask = get_preprocessed_text_inputs(df['productDisplayName'])\n\nprint(f\"Shape of KerasNLP Token IDs (NumPy): {X_token_ids.shape}\")\nprint(f\"Shape of KerasNLP Segment IDs (NumPy): {X_segment_ids.shape}\")\nprint(f\"Shape of KerasNLP Padding Mask (NumPy): {X_padding_mask.shape}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:36:59.865664Z","iopub.execute_input":"2025-07-29T08:36:59.866321Z","iopub.status.idle":"2025-07-29T08:37:14.964728Z","shell.execute_reply.started":"2025-07-29T08:36:59.866295Z","shell.execute_reply":"2025-07-29T08:37:14.964064Z"}},"outputs":[{"name":"stderr","text":"I0000 00:00:1753778234.498912      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13942 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5\nI0000 00:00:1753778234.499594      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 13942 MB memory:  -> device: 1, name: Tesla T4, pci bus id: 0000:00:05.0, compute capability: 7.5\n","output_type":"stream"},{"name":"stdout","text":"Shape of KerasNLP Token IDs (NumPy): (44411, 64)\nShape of KerasNLP Segment IDs (NumPy): (44411, 64)\nShape of KerasNLP Padding Mask (NumPy): (44411, 64)\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"label_encoder = LabelEncoder()\ny_encoded = label_encoder.fit_transform(df['masterCategory'])\n\nnum_classes = len(label_encoder.classes_)\ny_one_hot = keras.utils.to_categorical(y_encoded, num_classes=num_classes)\n\nprint(f\"Shape of one-hot encoded labels (NumPy): {y_one_hot.shape}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:37:30.636735Z","iopub.execute_input":"2025-07-29T08:37:30.637030Z","iopub.status.idle":"2025-07-29T08:37:30.650043Z","shell.execute_reply.started":"2025-07-29T08:37:30.637009Z","shell.execute_reply":"2025-07-29T08:37:30.649203Z"}},"outputs":[{"name":"stdout","text":"Shape of one-hot encoded labels (NumPy): (44411, 6)\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.countplot(data=df, y='masterCategory', order=df['masterCategory'].value_counts().index, palette='viridis')\nplt.title('Distribution of Products Across Main Categories')\nplt.xlabel('Number of Products')\nplt.ylabel('Category')\nplt.show()\n\ndf['title_length'] = df['productDisplayName'].apply(lambda x: len(x.split()))\nplt.figure(figsize=(10, 5))\nsns.histplot(df['title_length'], bins=20, kde=True, color='skyblue')\nplt.title('Distribution of Product Title Lengths (Words)')\nplt.xlabel('Number of Words in Title')\nplt.ylabel('Frequency')\nplt.axvline(MAX_TEXT_LEN, color='red', linestyle='--', label=f'Max Token Length ({MAX_TEXT_LEN})')\nplt.legend()\nplt.show()\n\nsample_idx = 0\nsample_original_img = Image.open(df['image_path'].iloc[sample_idx])\nplt.figure(figsize=(4, 4))\nplt.imshow(sample_original_img)\nplt.title(f\"Sample Original Image (ID: {df['id'].iloc[sample_idx]})\")\nplt.axis('off')\nplt.show()\n\nsample_title = df['productDisplayName'].iloc[sample_idx]\nsample_preprocessed_output_dict = preprocessor(tf.constant([sample_title]))\n\nsample_token_ids_display = sample_preprocessed_output_dict['token_ids']\nsample_segment_ids_display = sample_preprocessed_output_dict['segment_ids']\nsample_padding_mask_display = sample_preprocessed_output_dict['padding_mask']\n\nprint(f\"Original Sample Title: '{sample_title}'\")\nprint(f\"KerasNLP Token IDs (first 20): {sample_token_ids_display[0, :20].numpy()}\")\nprint(f\"KerasNLP Segment IDs (first 20): {sample_segment_ids_display[0, :20].numpy()}\")\nprint(f\"KerasNLP Padding Mask (first 20): {sample_padding_mask_display[0, :20].numpy()}\")\n\n\nX_img_paths_train, X_img_paths_temp, \\\nX_token_ids_train, X_token_ids_temp, \\\nX_segment_ids_train, X_segment_ids_temp, \\\nX_padding_mask_train, X_padding_mask_temp, \\\ny_train, y_temp = train_test_split(\n    df['image_path'].values,\n    X_token_ids,\n    X_segment_ids,\n    X_padding_mask,\n    y_one_hot,\n    test_size=0.3,\n    random_state=42,\n    stratify=y_one_hot\n)\n\nX_img_paths_val, X_img_paths_test, \\\nX_token_ids_val, X_token_ids_test, \\\nX_segment_ids_val, X_segment_ids_test, \\\nX_padding_mask_val, X_padding_mask_test, \\\ny_val, y_test = train_test_split(\n    X_img_paths_temp,\n    X_token_ids_temp,\n    X_segment_ids_temp,\n    X_padding_mask_temp,\n    y_temp,\n    test_size=0.5,\n    random_state=42,\n    stratify=y_temp\n)\n\nprint(f\"Number of products for Training: {len(X_img_paths_train)}\")\nprint(f\"Number of products for Validation: {len(X_img_paths_val)}\")\nprint(f\"Number of products for Testing: {len(X_img_paths_test)}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:37:34.043583Z","iopub.execute_input":"2025-07-29T08:37:34.043885Z","iopub.status.idle":"2025-07-29T08:37:35.470608Z","shell.execute_reply.started":"2025-07-29T08:37:34.043861Z","shell.execute_reply":"2025-07-29T08:37:35.469908Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 1 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 400x400 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Original Sample Title: 'Turtle Check Men Navy Blue Shirt'\nKerasNLP Token IDs (first 20): [  101 26024 23114  3401  2506  2770 14104  3740   102     0     0     0\n     0     0     0     0     0     0     0     0]\nKerasNLP Segment IDs (first 20): [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\nKerasNLP Padding Mask (first 20): [ True  True  True  True  True  True  True  True  True False False False\n False False False False False False False False]\nNumber of products for Training: 31087\nNumber of products for Validation: 6662\nNumber of products for Testing: 6662\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"GLOBAL_BATCH_SIZE = 64\ndef prepare_sample_kerasnlp(image_path_tensor, token_ids_tensor, segment_ids_tensor, padding_mask_tensor, label_tensor): # <-- NEW: padding_mask_tensor\n    image = load_and_preprocess_image(image_path_tensor)\n\n    return {\n        'image_input': image,\n        'token_ids': token_ids_tensor,\n        'segment_ids': segment_ids_tensor,\n        'padding_mask': padding_mask_tensor\n    }, label_tensor\n\n\ntrain_dataset = tf.data.Dataset.from_tensor_slices((\n    X_img_paths_train,\n    X_token_ids_train,\n    X_segment_ids_train,\n    X_padding_mask_train,\n    y_train\n))\ntrain_dataset = train_dataset.map(prepare_sample_kerasnlp, num_parallel_calls=tf.data.AUTOTUNE)\ntrain_dataset = train_dataset.shuffle(buffer_size=1024)\ntrain_dataset = train_dataset.batch(GLOBAL_BATCH_SIZE)\ntrain_dataset = train_dataset.prefetch(tf.data.AUTOTUNE)\n\nval_dataset = tf.data.Dataset.from_tensor_slices((\n    X_img_paths_val,\n    X_token_ids_val,\n    X_segment_ids_val,\n    X_padding_mask_val,\n    y_val\n))\nval_dataset = val_dataset.map(prepare_sample_kerasnlp, num_parallel_calls=tf.data.AUTOTUNE)\nval_dataset = val_dataset.batch(GLOBAL_BATCH_SIZE)\nval_dataset = val_dataset.prefetch(tf.data.AUTOTUNE)\n\nprint(\"Training and Validation Data Pipelines created successfully!\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:37:46.225887Z","iopub.execute_input":"2025-07-29T08:37:46.226570Z","iopub.status.idle":"2025-07-29T08:37:48.174056Z","shell.execute_reply.started":"2025-07-29T08:37:46.226543Z","shell.execute_reply":"2025-07-29T08:37:48.173368Z"}},"outputs":[{"name":"stdout","text":"Training and Validation Data Pipelines created successfully!\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"image_input = keras.Input(shape=(IMG_HEIGHT, IMG_WIDTH, 3), name='image_input')\nbase_cnn = keras.applications.MobileNetV2(\n    input_shape=(IMG_HEIGHT, IMG_WIDTH, 3),\n    include_top=False,\n    weights='imagenet'\n)\nbase_cnn.trainable = False\nx_img = base_cnn(image_input)\nx_img = layers.GlobalAveragePooling2D(name='image_global_avg_pooling')(x_img)\n\n\ntoken_ids = keras.Input(shape=(MAX_TEXT_LEN,), dtype=tf.int32, name='token_ids')\nsegment_ids = keras.Input(shape=(MAX_TEXT_LEN,), dtype=tf.int32, name='segment_ids')\npadding_mask = keras.Input(shape=(MAX_TEXT_LEN,), dtype=tf.bool, name='padding_mask')\n\nbert_backbone = keras_nlp.models.BertBackbone.from_preset(\"bert_base_en\")\nbert_backbone.trainable = False\n\n\nbert_inputs_dict = {\n    'token_ids': token_ids,\n    'segment_ids': segment_ids,\n    'padding_mask': padding_mask\n}\n\nbert_outputs_dict = bert_backbone(bert_inputs_dict)\n\nx_text = bert_outputs_dict['pooled_output']\n\n\n\nconcatenated_features = layers.concatenate([x_img, x_text], name='concatenate_features')\nx = layers.Dense(256, activation='relu', name='dense_1')(concatenated_features)\nx = layers.Dropout(0.3, name='dropout_1')(x)\nx = layers.Dense(128, activation='relu', name='dense_2')(x)\nx = layers.Dropout(0.3, name='dropout_2')(x)\noutput = layers.Dense(num_classes, activation='softmax', name='output_layer')(x)\n\n\nmodel = keras.Model(\n    inputs=[image_input, token_ids, segment_ids, padding_mask],\n    outputs=output,\n    name='Product_Classifier_Model'\n)\n\n\nmodel.compile(optimizer='adam',\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:38:01.777384Z","iopub.execute_input":"2025-07-29T08:38:01.778123Z","iopub.status.idle":"2025-07-29T08:38:08.946573Z","shell.execute_reply.started":"2025-07-29T08:38:01.778096Z","shell.execute_reply":"2025-07-29T08:38:08.946023Z"}},"outputs":[{"name":"stdout","text":"Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_1.0_224_no_top.h5\n\u001b[1m9406464/9406464\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"Product_Classifier_Model\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"Product_Classifier_Model\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape     \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m   Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to     \u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n│ image_input         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │ \u001b[38;5;34m3\u001b[0m)                │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ mobilenetv2_1.00_2… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m,      │  \u001b[38;5;34m2,257,984\u001b[0m │ image_input[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m] │\n│ (\u001b[38;5;33mFunctional\u001b[0m)        │ \u001b[38;5;34m1280\u001b[0m)             │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ padding_mask        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ segment_ids         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ token_ids           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ image_global_avg_p… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1280\u001b[0m)      │          \u001b[38;5;34m0\u001b[0m │ mobilenetv2_1.00… │\n│ (\u001b[38;5;33mGlobalAveragePool…\u001b[0m │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ bert_backbone       │ [(\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m768\u001b[0m),     │ \u001b[38;5;34m108,310,2…\u001b[0m │ padding_mask[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n│ (\u001b[38;5;33mBertBackbone\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m, \u001b[38;5;34m768\u001b[0m)]  │            │ segment_ids[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m… │\n│                     │                   │            │ token_ids[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ concatenate_featur… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2048\u001b[0m)      │          \u001b[38;5;34m0\u001b[0m │ image_global_avg… │\n│ (\u001b[38;5;33mConcatenate\u001b[0m)       │                   │            │ bert_backbone[\u001b[38;5;34m0\u001b[0m]… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)       │    \u001b[38;5;34m524,544\u001b[0m │ concatenate_feat… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ dense_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)       │     \u001b[38;5;34m32,896\u001b[0m │ dropout_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ dense_2[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ output_layer        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m)         │        \u001b[38;5;34m774\u001b[0m │ dropout_2[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n│ (\u001b[38;5;33mDense\u001b[0m)             │                   │            │                   │\n└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)        </span>┃<span style=\"font-weight: bold\"> Output Shape      </span>┃<span style=\"font-weight: bold\">    Param # </span>┃<span style=\"font-weight: bold\"> Connected to      </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n│ image_input         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)                │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ mobilenetv2_1.00_2… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>,      │  <span style=\"color: #00af00; text-decoration-color: #00af00\">2,257,984</span> │ image_input[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>] │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Functional</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)             │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ padding_mask        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ segment_ids         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ token_ids           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ image_global_avg_p… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1280</span>)      │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ mobilenetv2_1.00… │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePool…</span> │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ bert_backbone       │ [(<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span>),     │ <span style=\"color: #00af00; text-decoration-color: #00af00\">108,310,2…</span> │ padding_mask[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BertBackbone</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">768</span>)]  │            │ segment_ids[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n│                     │                   │            │ token_ids[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ concatenate_featur… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2048</span>)      │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ image_global_avg… │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Concatenate</span>)       │                   │            │ bert_backbone[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)       │    <span style=\"color: #00af00; text-decoration-color: #00af00\">524,544</span> │ concatenate_feat… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)       │     <span style=\"color: #00af00; text-decoration-color: #00af00\">32,896</span> │ dropout_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_2[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ output_layer        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">774</span> │ dropout_2[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)             │                   │            │                   │\n└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m111,126,470\u001b[0m (423.91 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">111,126,470</span> (423.91 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m558,214\u001b[0m (2.13 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">558,214</span> (2.13 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m110,568,256\u001b[0m (421.78 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">110,568,256</span> (421.78 MB)\n</pre>\n"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"EPOCHS = 10\n\nhistory = model.fit(\n    train_dataset,\n    validation_data=val_dataset,\n    epochs=EPOCHS,\n    verbose=1\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T08:38:17.017042Z","iopub.execute_input":"2025-07-29T08:38:17.017732Z","iopub.status.idle":"2025-07-29T09:19:54.651828Z","shell.execute_reply.started":"2025-07-29T08:38:17.017706Z","shell.execute_reply":"2025-07-29T09:19:54.650934Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1753778325.102099     124 service.cc:148] XLA service 0x484470a0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1753778325.103835     124 service.cc:156]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1753778325.103858     124 service.cc:156]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\nI0000 00:00:1753778328.283567     124 cuda_dnn.cc:529] Loaded cuDNN version 90300\nI0000 00:00:1753778353.404848     124 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m351s\u001b[0m 606ms/step - accuracy: 0.9162 - loss: 0.2565 - val_accuracy: 0.9779 - val_loss: 0.0847\nEpoch 2/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m228s\u001b[0m 465ms/step - accuracy: 0.9762 - loss: 0.0885 - val_accuracy: 0.9860 - val_loss: 0.0591\nEpoch 3/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m242s\u001b[0m 493ms/step - accuracy: 0.9786 - loss: 0.0810 - val_accuracy: 0.9818 - val_loss: 0.0679\nEpoch 4/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m244s\u001b[0m 498ms/step - accuracy: 0.9836 - loss: 0.0659 - val_accuracy: 0.9877 - val_loss: 0.0582\nEpoch 5/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m242s\u001b[0m 494ms/step - accuracy: 0.9852 - loss: 0.0572 - val_accuracy: 0.9878 - val_loss: 0.0565\nEpoch 6/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m244s\u001b[0m 497ms/step - accuracy: 0.9858 - loss: 0.0542 - val_accuracy: 0.9887 - val_loss: 0.0524\nEpoch 7/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m244s\u001b[0m 496ms/step - accuracy: 0.9879 - loss: 0.0481 - val_accuracy: 0.9890 - val_loss: 0.0519\nEpoch 8/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m237s\u001b[0m 484ms/step - accuracy: 0.9875 - loss: 0.0458 - val_accuracy: 0.9898 - val_loss: 0.0524\nEpoch 9/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m229s\u001b[0m 467ms/step - accuracy: 0.9884 - loss: 0.0447 - val_accuracy: 0.9877 - val_loss: 0.0560\nEpoch 10/10\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m236s\u001b[0m 480ms/step - accuracy: 0.9895 - loss: 0.0394 - val_accuracy: 0.9887 - val_loss: 0.0574\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/1500867749.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mmodel_save_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'/content/drive/MyDrive/trained_product_classifier_model.keras'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_save_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Trained model saved permanently to: {model_save_path}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    120\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    121\u001b[0m             \u001b[0;31m# `keras.config.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 122\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    123\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/saving/saving_lib.py\u001b[0m in \u001b[0;36msave_model\u001b[0;34m(model, filepath, weights_format, zipped)\u001b[0m\n\u001b[1;32m    141\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzip_filepath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    142\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 143\u001b[0;31m             \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"wb\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    144\u001b[0m                 \u001b[0m_save_model_to_fileobj\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweights_format\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    145\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/trained_product_classifier_model.keras'"],"ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/trained_product_classifier_model.keras'","output_type":"error"}],"execution_count":10},{"cell_type":"code","source":"# # Step 1: Data Acquisition (Loading from Google Drive)\n# from google.colab import drive\n# drive.mount('/content/drive')\n\n# model_save_path = '/content/drive/MyDrive/trained_product_classifier_model.keras'\nmodel.save('trained_product_classifier_model.keras')\nprint(f\"Trained model saved\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T09:43:11.602643Z","iopub.execute_input":"2025-07-29T09:43:11.603187Z","iopub.status.idle":"2025-07-29T09:43:13.965597Z","shell.execute_reply.started":"2025-07-29T09:43:11.603163Z","shell.execute_reply":"2025-07-29T09:43:13.964840Z"}},"outputs":[{"name":"stdout","text":"Trained model saved\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"print(\"\\n--- Evaluating Model on Test Set ---\")\n\ndef prepare_sample_for_test(image_path_tensor, token_ids_tensor, segment_ids_tensor, padding_mask_tensor, label_tensor):\n    image = load_and_preprocess_image(image_path_tensor)\n    return {\n        'image_input': image,\n        'token_ids': token_ids_tensor,\n        'segment_ids': segment_ids_tensor,\n        'padding_mask': padding_mask_tensor\n    }, label_tensor\n\ntest_dataset = tf.data.Dataset.from_tensor_slices((\n    X_img_paths_test,\n    X_token_ids_test,\n    X_segment_ids_test,\n    X_padding_mask_test,\n    y_test\n))\ntest_dataset = test_dataset.map(prepare_sample_for_test, num_parallel_calls=tf.data.AUTOTUNE)\ntest_dataset = test_dataset.batch(GLOBAL_BATCH_SIZE)\ntest_dataset = test_dataset.prefetch(tf.data.AUTOTUNE)\n\n\ntest_loss, test_accuracy = model.evaluate(test_dataset, verbose=1)\n\nprint(f\"\\nTest Loss: {test_loss:.4f}\")\nprint(f\"Test Accuracy: {test_accuracy:.4f}\")\n\nif test_accuracy >= 0.98:\n    print(\"\\nCongratulations! Your model shows excellent generalization on unseen data!\")\nelse:\n    print(\"\\nModel performance on test set is good, but might have room for improvement.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T09:49:22.432187Z","iopub.execute_input":"2025-07-29T09:49:22.432483Z","iopub.status.idle":"2025-07-29T09:50:10.918579Z","shell.execute_reply.started":"2025-07-29T09:49:22.432463Z","shell.execute_reply":"2025-07-29T09:50:10.917993Z"}},"outputs":[{"name":"stdout","text":"\n--- Evaluating Model on Test Set ---\n\u001b[1m105/105\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 461ms/step - accuracy: 0.9868 - loss: 0.0567\n\nTest Loss: 0.0635\nTest Accuracy: 0.9862\n\nCongratulations! Your model shows excellent generalization on unseen data!\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"print(\"\\n--- Visualizing Training History ---\")\n\nhist_df = pd.DataFrame(history.history)\n\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nplt.plot(hist_df['accuracy'], label='Training Accuracy')\nplt.plot(hist_df['val_accuracy'], label='Validation Accuracy')\nplt.title('Training and Validation Accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.grid(True)\n\nplt.subplot(1, 2, 2)\nplt.plot(hist_df['loss'], label='Training Loss')\nplt.plot(hist_df['val_loss'], label='Validation Loss')\nplt.title('Training and Validation Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.legend()\nplt.grid(True)\n\nplt.tight_layout()\nplt.show()\n\nprint(\"Training history plots generated. These plots help assess learning progress and overfitting.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T09:50:22.258050Z","iopub.execute_input":"2025-07-29T09:50:22.258766Z","iopub.status.idle":"2025-07-29T09:50:22.637794Z","shell.execute_reply.started":"2025-07-29T09:50:22.258744Z","shell.execute_reply":"2025-07-29T09:50:22.637041Z"}},"outputs":[{"name":"stdout","text":"\n--- Visualizing Training History ---\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Training history plots generated. These plots help assess learning progress and overfitting.\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"print(\"\\n--- Extracting Fused Features for Anomaly Detection ---\")\n\nfeature_extractor = keras.Model(\n    inputs=model.inputs,\n    outputs=model.get_layer('concatenate_features').output,\n    name='Feature_Extractor_Model'\n)\n\ntrain_features_dataset = train_dataset.map(lambda x_dict, y: x_dict)\ntest_features_dataset = test_dataset.map(lambda x_dict, y: x_dict)\n\n\nprint(\"Extracting features from training data (this might take a few minutes)...\")\n\ntrain_fused_features = feature_extractor.predict(train_features_dataset, verbose=1)\nprint(f\"Shape of extracted training features: {train_fused_features.shape}\")\n\nprint(\"Extracting features from test data (this might take a few minutes)...\")\n\ntest_fused_features = feature_extractor.predict(test_features_dataset, verbose=1)\nprint(f\"Shape of extracted test features: {test_fused_features.shape}\")\n\nprint(\"Fused features (combined image and text understanding) extracted successfully.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T09:50:39.232774Z","iopub.execute_input":"2025-07-29T09:50:39.233106Z","iopub.status.idle":"2025-07-29T09:54:50.600314Z","shell.execute_reply.started":"2025-07-29T09:50:39.233084Z","shell.execute_reply":"2025-07-29T09:54:50.599474Z"}},"outputs":[{"name":"stdout","text":"\n--- Extracting Fused Features for Anomaly Detection ---\nExtracting features from training data (this might take a few minutes)...\n\u001b[1m486/486\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m208s\u001b[0m 406ms/step\nShape of extracted training features: (31087, 2048)\nExtracting features from test data (this might take a few minutes)...\n\u001b[1m105/105\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m43s\u001b[0m 407ms/step\nShape of extracted test features: (6662, 2048)\nFused features (combined image and text understanding) extracted successfully.\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nprint(\"\\n--- Training Anomaly Detector (Isolation Forest) ---\")\n\nscaler = StandardScaler()\ntrain_fused_features_scaled = scaler.fit_transform(train_fused_features)\ntest_fused_features_scaled = scaler.transform(test_fused_features)\n\niso_forest = IsolationForest(contamination=0.01, random_state=42)\n\niso_forest.fit(train_fused_features_scaled)\n\nprint(\"Isolation Forest trained successfully on training features.\")\n\nanomaly_scores = iso_forest.decision_function(test_fused_features_scaled)\n\nanomaly_predictions = iso_forest.predict(test_fused_features_scaled)\n\nprint(\"\\nAnomaly scores and predictions generated for test data.\")\n\nanomaly_indices = np.where(anomaly_predictions == -1)[0]\nnum_anomalies = len(anomaly_indices)\n\nprint(f\"\\nTotal products in test set: {len(test_fused_features)}\")\nprint(f\"Number of predicted anomalies in test set (based on contamination={iso_forest.contamination}): {num_anomalies}\")\n\nif num_anomalies > 0:\n    print(\"\\n--- Sample of Detected Anomalies (Details Below) ---\")\n\n    original_df_anomaly_indices = test_original_indices[anomaly_indices]\n    anomalous_products_info = df.loc[original_df_anomaly_indices].copy()\n\n    anomalous_products_info['anomaly_score'] = anomaly_scores[anomaly_indices]\n\n    anomalous_products_info.sort_values(by='anomaly_score', ascending=True, inplace=True)\n\n    print(f\"\\nDetails for the top {min(10, num_anomalies)} most anomalous products (sorted by score):\")\n    for i, row in anomalous_products_info.head(min(10, num_anomalies)).iterrows():\n        print(f\"\\n--- Anomaly {anomalous_products_info.index.get_loc(i) + 1} (Original ID: {row['id']}) ---\")\n        print(f\"  Title: {row['productDisplayName']}\")\n        print(f\"  Category: {row['masterCategory']}\")\n        print(f\"  Anomaly Score: {row['anomaly_score']:.4f} (Lower is more anomalous)\")\n\n        try:\n            img = Image.open(row['image_path'])\n            plt.figure(figsize=(3, 3))\n            plt.imshow(img)\n            plt.title(f\"Anomaly: {row['productDisplayName'][:30]}...\")\n            plt.axis('off')\n            plt.show()\n        except Exception as e:\n            print(f\"  Could not display image for ID {row['id']}: {e}\")\n\nelse:\n    print(\"No anomalies detected based on the chosen contamination factor. Try adjusting 'contamination' in IsolationForest.\")\n\nprint(\"\\nAnomaly detection phase complete!\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-29T10:01:42.192577Z","iopub.execute_input":"2025-07-29T10:01:42.192917Z","iopub.status.idle":"2025-07-29T10:01:53.112014Z","shell.execute_reply.started":"2025-07-29T10:01:42.192895Z","shell.execute_reply":"2025-07-29T10:01:53.111143Z"}},"outputs":[{"name":"stdout","text":"\n--- Training Anomaly Detector (Isolation Forest) ---\nIsolation Forest trained successfully on training features.\n\nAnomaly scores and predictions generated for test data.\n\nTotal products in test set: 6662\nNumber of predicted anomalies in test set (based on contamination=0.01): 59\n\n--- Sample of Detected Anomalies (Details Below) ---\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/3209643674.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     27\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\n--- Sample of Detected Anomalies (Details Below) ---\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m     \u001b[0moriginal_df_anomaly_indices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_original_indices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0manomaly_indices\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     30\u001b[0m     \u001b[0manomalous_products_info\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0moriginal_df_anomaly_indices\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'test_original_indices' is not defined"],"ename":"NameError","evalue":"name 'test_original_indices' is not defined","output_type":"error"}],"execution_count":17},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}